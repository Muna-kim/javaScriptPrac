// 기번 문법 요약
alert('Hello'); alert('world');
// 세미콜론을 기준으로 구분, 줄바꿈으로 구분 둘다 가능
alert('Hello')
alert('world')

// 세미콜론 자동 삽입 (automatic semicolon insertion)
alert[1, 2].forEach(alert)

// 문장 끝에 세미콜론 붙이는걸 권장.
// 하지만 블록과 함꼐 구성되는 문법끝에는 세미콜론을 붙이지 않아도 됨
function f(){
  // 함수 선언문 끝에는 세미콜론 필요 없음
}
for(;;){
  // 반복문 끝에는 세미콜론 필요 없음
}

// 엄격모드
// 'use strict'  // 최 상단이나 함수본문 최상단에 있어야 함
// 없어도 정상 동작 함

// 변수
// let - 변수 재선언 불가능
// const - 변수 재선언 불가능, 재할당 불가능
// var - 변수 재선언 가능

// 변수 이름
// 숫자,문자 가능(첫 글자는 숫자 안됨)
// 특수기호는 $, _ 만 가능

// 자바스크립트는 동적 타이핑을 허용 - 자료형을 바꿔가며 할당 가능
let x = 5;
x = "John";

// 자바스크립트에서는 여덟가지 기본 자료형을 지원
// 1. 숫자형
// 2. BigInt형
// 3. 문자형
// 4. 불린형
// 5. null
// 6. undefined
// 7. 객체형 (복잡한 자료구조를 저장하는데 쓰임)
// 8. 심볼형 (고유한 식별자를 만들때 사용)
// typeof 연산자는 값의 자료형을 반환해줌. 그런데 두가지 예외사항이 있음
// 예외1. typeof null == "object" // 언어 자체의 오류
// 예외2. typeof function(){} == "function"  // 함수는 특별하게 취급됨

// 상호작용
// prompt(question, [default])
// 취소 버튼을 누르면 null이 반환됨

// confirm(question)
// 컨펌 대화상자에 매개변수로 받은 question을 넣어 확인==true, 취소==false

// alert(message)
// alert창

let userName = prompt("이름을 알려주세요","영희");
let isTeaWanted = confirm("차 한잔 드릴까요?");

alert("방문객 : " + userName);
alert("차 주문 여부 : " + isTeaWanted);

// 연산자
// 이항 덧셈 연산자 + 는 피연산자중 하나가 문자열일때 나머지 하나를 문자형으로 취급
alert('1' + 2);  //12
alert(1 + '2');  //12

// 할당 연산자
a = b;
a *= 2;  // 복합 할당 연산자

// 비트 연산자

// 조건부 연산자
cond ? resultA : reusltB

// 논리 연산자
// && ||

// null 병합 연산자
 a ?? b  // a가 null이나 undefined이면 a, 아니면 b

// 비교 연산자
// 동등 연산자 == 는 형이 다른 값끼리 비교할때 피연산자의 자료형을 숫자형으로 바꾼뒤 비교한다.
// null 과 undefined는 자기끼리 비교할땐 참을 반환하지만 다른 자료형과 비교할땐 거짓을 반환한다.
alert(0 == false);  // true
alert(0 == '');  // true
// 기타 비교 연산자들 < > <= >= 역시 피연산자의 자료형을 숫자형으로 바꾼후 비교를 진행한다.
// 일치연산자 ===는 피연산자의 형을 반환하지 않는다.
// < > <= >= 얘네들의 피연산자로 문자열이 들어오면 글자 단위로 크기비교가 이루어진다. 다른 타입의 값이 들어오면 숫자형으로 변환

// 기타 연산자
// 쉼표 연산자 등